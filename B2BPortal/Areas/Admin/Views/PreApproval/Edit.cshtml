@using B2BPortal.Infrastructure
@using Microsoft.Graph
@model AzureB2BInvite.Models.PreAuthDomain

@{
    ViewBag.Title = "Approved Partner Organizations";
    ViewBag.RedemptionPropertyName = "DomainRedemptionSettings";

    var _templates = new List<SelectListItem>();

    if (ViewBag.Templates != null)
    {
        _templates = (List<SelectListItem>)ViewBag.Templates;
    }

    var MemberTypeRO = (!User.IsInRole(B2BPortal.Infrastructure.Roles.CompanyAdministrator)) ? "readonly" : "";
    var isEditing = (Model != null && Model.Id != null);
    var domainName = (isEditing) ? Model.DomainName : "";
}

@using (Html.BeginForm("Edit", "PreApproval", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <div class="panel panel-primary" style="margin-top:20px;">
        <div class="panel-title panel-heading">
            @ViewBag.Title - @ViewBag.Operation
        </div>
        <div class="panel-body">
            <div class="form-horizontal">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.Id)
                @Html.HiddenFor(model => model.CreateDate)
                <div class="form-group control">
                    <div class="col-md-12">
                        <button type="submit" class="btn btn-default control"><span class="glyphicon glyphicon-floppy-disk"></span> Save</button>
                        @if (isEditing)
                        {
                            <button id="btnDelete" type="button" class="btn btn-default control"><span class="glyphicon glyphicon-trash"></span> Delete</button>
                        }
                        <button id="btnCancel" type="button" class="btn btn-default control"><span class="glyphicon glyphicon-remove"></span> Cancel</button>
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-4">
                        @Html.LabelFor(model => model.DomainName, "Organization Domain", htmlAttributes: new { @class = "control-label addHelp" })
                        <div class="input-group">
                            <span class="input-group-addon" style="padding:6px 9px;">
                                <span id="spIsAADTenant" class="glyphicon glyphicon-aad-false"></span>
                            </span>
                            <span class="input-group-addon" style="padding:6px 9px;">
                                email@@
                            </span>
                            @Html.EditorFor(model => model.DomainName, new { htmlAttributes = new { @class = "form-control" } })
                        </div>
                        <span id="AADMessage"></span>
                        @Html.ValidationMessageFor(model => model.DomainName, "", new { @class = "text-danger" })
                        <div class="input-group" style="margin-top:6px;">
                            <span class="input-group-addon">
                                @Html.EditorFor(model => model.AutoApprove)
                            </span>
                            @Html.LabelFor(model => model.AutoApprove, htmlAttributes: new { @class = "form-control", @id = "lblAutoApprove" })
                        </div>
                        @Html.ValidationMessageFor(model => model.AutoApprove, "", new { @class = "text-danger" })
                        <div class="notes">
                            Enter a domain name, like "microsoft.com". We will check to confirm if the domain is part of an existing Azure
                            Active Directory tenant. If verified, you may set "Auto Approve" to true.
                            If the domain is from a verified Azure Active Directory, checking this box will auto-approve anyone that requests access
                            from this domain (not available if the domain isn't a verified tenant). If unchecked, registrations will be pended in
                            the approval queue.
                        </div>
                    </div>

                    <div class="col-md-4">
                        @Html.LabelFor(model => model.Groups, htmlAttributes: new { @class = "control-label addHelp" })
                        @Html.EditorFor(model => model.Groups, "GroupsMultiSel")
                        @Html.ValidationMessageFor(model => model.Groups, "", new { @class = "text-danger" })
                        <div class="notes">
                            Ctrl-click to select automatic group assignment(s) for users that are granted access via this domain profile.
                        </div>
                    </div>
                    <div class="col-md-4">
                        <label>Miscellaneous</label>
                        <table class="table">
                            <tr>
                                <td>@Html.DisplayNameFor(model => model.AuthUser)</td>
                                <td>@Html.ValueFor(model => model.AuthUser)</td>
                            </tr>
                            <tr>
                                <td>@Html.DisplayNameFor(model => model.CreateDate)</td>
                                <td>@Html.ValueFor(model => model.CreateDate)</td>
                            </tr>
                            <tr>
                                <td>@Html.DisplayNameFor(model => model.LastUpdated)</td>
                                <td>@Html.ValueFor(model => model.LastUpdated)</td>
                            </tr>
                        </table>
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-6">
                        @Html.LabelFor(model => model.MemberType, htmlAttributes: new { @class = "control-label addHelp" })
                        @Html.EnumDropDownListFor(model => model.MemberType, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.MemberType, "", new { @class = "text-danger" })
                        <div class="notes">
                            By default, approved guests are added as "Guest", with limited options for elevating permissions.
                            A Company Administrator can optionally create a profile granting approved guests "Member" access,
                            allowing the ability to assign elevated permissions (if required).
                        </div>
                    </div>
                    <div class="col-md-6">
                        @Html.LabelFor(model => model.InviteTemplateId, htmlAttributes: new { @class = "control-label addHelp" })
                        @Html.DropDownListFor(model => model.InviteTemplateId, _templates, "Select email template...", new { @class = "form-control input-sm" })
                        @Html.ValidationMessageFor(model => model.InviteTemplateId, "", new { @class = "text-danger" })
                        <div class="notes">
                            (optional) - Select an invitation template.
                            @if (Settings.UseSMTP)
                            {
                                <div>
                                    This template will be used to create the invitation message that is emailed.
                                    Use the "Manage Mail Templates" admin tool to create and manage templates.
                                </div>
                            }
                            else
                            {
                                <div>
                                    This text will be added to the default B2B invitation email sent by Azure Active
                                    Directory to your approved guests. Use the "Manage Mail Templates" admin tool
                                    to create and manage templates.
                                </div>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    @Html.Partial("_editRedemptionSettings", Model.DomainRedemptionSettings)
}
@section scripts {
    <script type="text/javascript">
        $(function () {
            var isEditing = @isEditing.ToString().ToLower();
            var domain = "@domainName";
            if (domain!="") checkTenant(domain);

            $("#btnCancel").on("click", function() {
                location.href="/admin/preapproval/";
            });

            $("#btnDelete").on("click", function() {
                if (!confirm("Are you sure you want to delete this profile?")) return;

                document.forms[0].action = "/admin/preapproval/Delete";
                document.forms[0].submit();
            });

            $("#DomainName").on("change", function () {
                checkTenant($(this).val());
            }).focus();

            function checkTenant(domain) {
                var data = { DomainName: domain }
                SiteUtil.AjaxCall("/api/Preauth/GetPublicTenant/" + domain + "/", null, function (isAAD) {
                    if (isAAD) {
                        $("#spIsAADTenant").removeClass().addClass("glyphicon glyphicon-aad-true");
                        $("#AutoApprove").removeAttr("disabled");
                        if (!isEditing)
                        {
                            $("#AutoApprove").prop("checked", true);
                        }
                        $("#lblAutoApprove").css("background-color", "white");
                        $("#AADMessage").html("Verified in Azure Active Directory").css("color","green");
                    } else {
                        $("#spIsAADTenant").removeClass().addClass("glyphicon glyphicon-aad-false");
                        $("#AutoApprove").attr("disabled", "disabled")
                        if (!isEditing)
                        {
                            $("#AutoApprove").prop("checked", false);
                        }
                        $("#lblAutoApprove").css("background-color", "#efefef");
                        $("#AADMessage").html("Not in Azure Active Directory").css("color", "darkgoldenrod");
                    }
                });
            }
        });
    </script>
}

@section styles {
    <style type="text/css">
        div.col-md-6 input,
        div.col-md-6 select,
        div.col-md-6 span {
            max-width: 320px;
        }

        div.col-md-6 label {
            max-width: 280px;
        }

        #AADMessage {
            text-align: right;
            font-size: .8em;
            display: block;
            height:11px;
        }
        div.redemption input,
        div.redemption label {
            max-width:none;
        }
    </style>
}